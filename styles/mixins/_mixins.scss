@mixin border-radius($radius) {
  border-radius: $radius;
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
}

@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}
  
@mixin fluid-size($attr, $min-size, $max-size, $min-vw, $max-vw) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-size);
  $u4: unit($max-size);


  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      #{$attr}: $min-size;
      @media screen and (min-width: $min-vw) {
        #{$attr}: calc(#{$min-size} + #{strip-unit($max-size - $min-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      }
      @media screen and (min-width: $max-vw) {
        #{$attr}: $max-size;
      }
    }
  }
}

// BREAKPOINTS

@mixin sm {
  @media (min-width: #{$screen-sm-min}) {
      @content;
  }
}

@mixin md {
  @media (min-width: #{$screen-md-min}) {
      @content;
  }
}

@mixin lg {
  @media (min-width: #{$screen-lg-min}) {
      @content;
  }
}

@mixin xl {
  @media (min-width: #{$screen-xl-min}) {
      @content;
  }
}

@mixin xxl {
  @media (min-width: #{$screen-xxl-min}) {
      @content;
  }
}

@mixin xxxl {
  @media (min-width: #{$screen-xxxl-min}) {
      @content;
  }
}

@mixin xxxxl {
  @media (min-width: #{$screen-xxxxl-min}) {
      @content;
  }
}

// CUSTOM
@mixin rwd($screen) {
  @media (min-width: $screen+'px') {
      @content;
  }
}